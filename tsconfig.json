{
    "compilerOptions": {
        /* Projects */

        /* Language and Environment */
        "target": "es2015" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
        "jsx": "react" /* Specify what JSX code is generated. */,
        "experimentalDecorators": true /* Enable experimental support for TC39 stage 2 draft decorators. */,

        /* Modules */
        "module": "esNext" /* Specify what module code is generated. */,
        "moduleResolution": "node" /* Specify how TypeScript looks up a file from a given module specifier. */,
        "baseUrl": "src" /* Specify the base directory to resolve non-relative module names. */,
        "typeRoots": ["./types", "node_modules/@types"] /* Specify multiple folders that act like './node_modules/@types'. */,
        "types": ["react"] /* Specify type package names to be included without being referenced in a source file. */,

        /* JavaScript Support */
        "allowJs": true /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */,

        /* Emit */
        "declaration": true /* Generate .d.ts files from TypeScript and JavaScript files in your project. */,
        "sourceMap": true /* Create source map files for emitted JavaScript files. */,
        "outDir": "dist" /* Specify an output folder for all emitted files. */,
        "removeComments": true /* Disable emitting comments. */,

        /* Interop Constraints */
        "allowSyntheticDefaultImports": true /* Allow 'import x from y' when a module doesn't have a default export. */,
        "esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
        "forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

        /* Type Checking */
        "strict": true /* Enable all strict type-checking options. */,
        "noImplicitAny": false /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
        "strictNullChecks": true /* When type checking, take into account 'null' and 'undefined'. */,
        "noUnusedLocals": true /* Enable error reporting when local variables aren't read. */,
        "noImplicitReturns": true /* Enable error reporting for codepaths that do not explicitly return in a function. */,

        /* Completeness */
        "skipLibCheck": true /* Skip type checking all .d.ts files. */
    },
    "exclude": ["dist", "node_modules"]
}
